<web-app
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID"
	version="2.5">

	<!-- Web context -->

	<servlet>
		<servlet-name>OAuth2</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
	        <param-name>contextConfigLocation</param-name>
	        <param-value>classpath*:/WEB-INF/OAuth2-servlet.xml</param-value>
	    </init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!-- Logout WS -->
	<servlet>
		<servlet-name>Token Management Service</servlet-name>
		<servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
		<init-param>
			<param-name>org.glassfish.jersey.config.property.packages</param-name>
			<param-value>com.idega.block.oauth2.server.controller</param-value>
		</init-param>
		<init-param>
			<param-name>org.glassfish.jersey.api.json.POJOMappingFeature</param-name>
			<param-value>true</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
    
    <!-- Authentication WS -->
	<servlet>
		<servlet-name>Authentication Management Service</servlet-name>
		<servlet-class>com.idega.block.oauth2.server.authentication.servlet.AuthenticatorServlet</servlet-class>
		<init-param>
			<param-name>org.glassfish.jersey.config.property.packages</param-name>
			<param-value>com.idega.block.oauth2.server.authentication.business</param-value>
		</init-param>
		<init-param>
			<param-name>org.glassfish.jersey.config.property.packages</param-name>
			<param-value>com.idega.block.oauth2.server.authentication.bean</param-value>
		</init-param>
		<init-param>
			<param-name>org.glassfish.jersey.api.json.POJOMappingFeature</param-name>
			<param-value>true</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<filter>
		<filter-name>Authentication Management Service Filter</filter-name>
		<filter-class>com.idega.block.oauth2.server.authentication.servlet.AuthenticatorServlet</filter-class>
		<init-param>
	       <param-name>allowedOrigins</param-name>
	       <param-value>*</param-value>
	   	</init-param>
	   	<init-param>
	       <param-name>allowedMethods</param-name>
	       <param-value>*</param-value>
	   	</init-param>
	   	<init-param>
	       <param-name>allowedHeaders</param-name>
	       <param-value>*</param-value>
	   	</init-param>
	</filter>

	<servlet-mapping>
		<servlet-name>Token Management Service</servlet-name>
		<url-pattern>/token/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>OAuth2</servlet-name>
		<url-pattern>/authentication/*</url-pattern>
	</servlet-mapping>
    
    <servlet-mapping>
        <servlet-name>Authentication Management Service</servlet-name>
        <url-pattern>/authenticate/*</url-pattern>
    </servlet-mapping>
    <filter-mapping>
        <filter-name>Authentication Management Service Filter</filter-name>
        <url-pattern>/authenticate/*</url-pattern>
    </filter-mapping>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Wiring Spring Security by defining a filter -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<!-- Mapping filter to the root context so all calls are filtered -->
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
</web-app>